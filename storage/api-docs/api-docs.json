{
    "openapi": "3.0.0",
    "info": {
        "title": "Organisation_Rest_api",
        "description": "Organisation",
        "contact": {
            "email": "dev@organisation.net"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0",
        "x-logo": {
            "url": "https://via.placeholder.com/190x90.png?text=L5-Swagger"
        }
    },
    "paths": {
        "/api/v1/user/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Login a user and create an access token",
                "operationId": "da2d8ce8f0aa5e544a80c7e6104e4491",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "example": "admin@boilerplate.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password"
                                    },
                                    "remember_me": {
                                        "type": "boolean",
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Successful login with redirection if 2FA is enabled",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "accessToken": {
                                            "type": "string",
                                            "example": "11|nwmC2LXUlgVOrR67GsJfLJHJXBmgTRo9whmB3QPX7b236605"
                                        },
                                        "userAbilityRules": {
                                            "type": "array",
                                            "items": {
                                                "type": "string",
                                                "example": [
                                                    "view_dashboard",
                                                    "edit_profile"
                                                ]
                                            }
                                        },
                                        "userData": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "fname": {
                                                    "type": "string",
                                                    "example": "John"
                                                },
                                                "lname": {
                                                    "type": "string",
                                                    "example": "Doe"
                                                }
                                            },
                                            "type": "object"
                                        },
                                        "token_type": {
                                            "type": "string",
                                            "example": "Bearer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid email or password",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "email": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Invalid email or password"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized access (e.g., incorrect OTP or email verification required)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "errors": {
                                            "properties": {
                                                "token": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "Invalid Token Supplied"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/api/v1/user/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Logout a user",
                "operationId": "c6c8090ef9aa4412d8e09d5036420ce8",
                "responses": {
                    "200": {
                        "description": "User logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string",
                                            "example": "Logout was successful."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - No token provided or invalid token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "error": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/user/org_repository/add_repository": {
            "post": {
                "tags": [
                    "Repositories"
                ],
                "summary": "Create an organization repository",
                "description": "Fetches details from GitHub API and stores them in the database.",
                "operationId": "createOrgRepository",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_repo_url"
                                ],
                                "properties": {
                                    "github_repo_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://github.com/user/repo"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A sample repo"
                                    },
                                    "visibility": {
                                        "type": "string",
                                        "example": "public"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "PHP"
                                    },
                                    "license": {
                                        "type": "string",
                                        "example": "MIT"
                                    },
                                    "forks_count": {
                                        "type": "integer",
                                        "example": 10
                                    },
                                    "open_issues_count": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "watchers_count": {
                                        "type": "integer",
                                        "example": 20
                                    },
                                    "default_branch": {
                                        "type": "string",
                                        "example": "main"
                                    },
                                    "topics": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "laravel",
                                            "vue",
                                            "devops"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Repository created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository created successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Validation Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create repository"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user/org_repository/fetch": {
            "get": {
                "tags": [
                    "Repositories"
                ],
                "summary": "Fetch organization repositories",
                "description": "Retrieves a paginated list of repositories, optionally filtered by name or description.",
                "operationId": "fetchOrganisationRepo",
                "parameters": [
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of repositories per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 10
                        }
                    },
                    {
                        "name": "filter",
                        "in": "query",
                        "description": "Search query to filter repositories by name or description",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "example": "laravel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of repositories fetched successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch repositories."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user/org_repository/update/{id}": {
            "put": {
                "tags": [
                    "Repositories"
                ],
                "summary": "Update an organization repository",
                "description": "Updates the details of an existing repository using GitHub API data and user-provided values.",
                "operationId": "updateOrgRepository",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the repository to update",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "github_repo_url"
                                ],
                                "properties": {
                                    "github_repo_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://github.com/user/repo"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated repository description"
                                    },
                                    "visibility": {
                                        "type": "string",
                                        "example": "public"
                                    },
                                    "language": {
                                        "type": "string",
                                        "example": "PHP"
                                    },
                                    "license": {
                                        "type": "string",
                                        "example": "MIT"
                                    },
                                    "forks_count": {
                                        "type": "integer",
                                        "example": 5
                                    },
                                    "open_issues_count": {
                                        "type": "integer",
                                        "example": 2
                                    },
                                    "watchers_count": {
                                        "type": "integer",
                                        "example": 8
                                    },
                                    "default_branch": {
                                        "type": "string",
                                        "example": "main"
                                    },
                                    "topics": {
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "laravel",
                                            "vue",
                                            "devops"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Repository updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "GitHub repository not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "GitHub repository not found"
                                        },
                                        "details": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to update repository"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception details"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user/org_repository/delete/{id}": {
            "delete": {
                "tags": [
                    "Repositories"
                ],
                "summary": "Delete an organization repository",
                "description": "Permanently deletes an organization repository from the database.",
                "operationId": "deleteRepository",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of the repository to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Repository deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository and related records removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Repository not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while removing repository and related records"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user/repository/add_repository": {
            "post": {
                "tags": [
                    "Repositories"
                ],
                "summary": "Create a new repository",
                "description": "Create a new repository.",
                "operationId": "6ffedc2d402fef891d1b7c53f0e327db",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "no_of_stars"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "New Repo"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "A description for the repository."
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com",
                                        "nullable": true
                                    },
                                    "repo_code": {
                                        "type": "string",
                                        "example": "ABC123XYZ",
                                        "nullable": true
                                    },
                                    "no_of_stars": {
                                        "type": "integer",
                                        "example": 50
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Repository created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository created successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "New Repo"
                                                },
                                                "description": {
                                                    "type": "string",
                                                    "example": "A description for the repository."
                                                },
                                                "url": {
                                                    "type": "string",
                                                    "format": "url",
                                                    "example": "https://example.com",
                                                    "nullable": true
                                                },
                                                "repo_code": {
                                                    "type": "string",
                                                    "example": "ABC123XYZ",
                                                    "nullable": true
                                                },
                                                "no_of_stars": {
                                                    "type": "integer",
                                                    "example": 50
                                                },
                                                "created_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-04T12:34:56Z"
                                                },
                                                "updated_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2024-03-04T12:34:56Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        },
                                        "errors": {
                                            "properties": {
                                                "name": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The name field is required."
                                                    }
                                                },
                                                "no_of_stars": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "example": "The no_of_stars field must be an integer."
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Failed to create repository",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to create repository"
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'New Repo' for key 'repositories.name'"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user/repository/fetch": {
            "get": {
                "tags": [
                    "Repositories"
                ],
                "summary": "Fetch all repositories",
                "description": "Retrieve a list of all repositories stored in the database.",
                "operationId": "fetchRepositories",
                "responses": {
                    "200": {
                        "description": "Successful operation",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "MyRepo"
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "example": "This is a sample repository"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "example": "https://github.com/user/repo"
                                                    },
                                                    "repo_code": {
                                                        "type": "string",
                                                        "example": "ABC123"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Failed to fetch repositories."
                                        },
                                        "error": {
                                            "type": "string",
                                            "example": "Exception message"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user/reposistory/update/{id}": {
            "put": {
                "tags": [
                    "Repositories"
                ],
                "summary": "Update a repository",
                "description": "Update a repository.",
                "operationId": "b1a9a5be658b56aeaf637eba91f3dee4",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Repository ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "description",
                                    "no_of_stars"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "example": "Updated Repo"
                                    },
                                    "description": {
                                        "type": "string",
                                        "example": "Updated repository description."
                                    },
                                    "url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://example.com"
                                    },
                                    "repo_code": {
                                        "type": "string",
                                        "example": "ABC123XYZ"
                                    },
                                    "no_of_stars": {
                                        "type": "string",
                                        "example": "100"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Repository updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository updated successfully"
                                        },
                                        "data": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid input",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Invalid input"
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Repository not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/api/v1/user/repository/delete{repo_id}": {
            "delete": {
                "tags": [
                    "Repositories"
                ],
                "summary": "Delete a repository",
                "description": "Delete a repository by ID.",
                "operationId": "836e4c3b3aec587106e11af5fc10c7a5",
                "parameters": [
                    {
                        "name": "repo_id",
                        "in": "path",
                        "description": "ID of the repository to delete",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Repository deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "success"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository and related records removed successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Repository not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Repository not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "error"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "An error occurred while removing repository and related records"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        }
    },
    "tags": [
        {
            "name": "Authentication",
            "description": "Authentication"
        },
        {
            "name": "Repositories",
            "description": "Repositories"
        }
    ],
    "components": {
        "securitySchemes": {
            "sanctum": {
                "type": "apiKey",
                "description": "Enter token in format (Bearer <token>)",
                "name": "Authorization",
                "in": "header"
            }
        }
    }
}